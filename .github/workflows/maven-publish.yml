name: Maven CI/CD

on:
  push:
    branches: [ "main" ]
  release:
    types: [created]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'anasm20/Software_Lifecycle_Semesterprojekt'
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build and Test with Maven
        run: mvn -B package --file Backend/rest.demo/pom.xml
      - run: mkdir download && cp Backend/rest.demo/target/*.jar download
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: download
  
  publish:
    needs: build_and_test
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: Build
      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}
    
  release:
    needs: build_and_test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: Build
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "Changes in this Release\n - Add list of changes with bullet points here"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Backend/rest.demo/target/meinProjekt.jar
          asset_name: meinProjekt.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
